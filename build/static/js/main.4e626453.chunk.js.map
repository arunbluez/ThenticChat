{"version":3,"sources":["theme/index.ts","components/Layout.tsx","components/Identicon.tsx","context/FirebaseProvider.jsx","components/ConnectButton.tsx","assets/lvl1.png","assets/lvl2.png","assets/lvl3.png","context/ThenticApiProvider.jsx","components/LvlNftMint.tsx","components/AccountModal.tsx","components/ChatMessage.tsx","components/ChatRoom.tsx","components/InitTransaction.tsx","App.tsx","index.tsx"],"names":["extendTheme","fonts","heading","body","Layout","children","flexDirection","alignItems","justifyContent","h","bg","StyledIdenticon","styled","div","Identicon","props","ref","useRef","useEffect","account","current","innerHTML","appendChild","Jazzicon","parseInt","slice","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","FirebaseContext","createContext","FirebaseProvider","useState","user","setUser","auth","firestore","analytics","Provider","value","ConnectButton","handleOpenModal","useContext","useEthers","activateBrowserWallet","etherBalance","useEtherBalance","usersRef","collection","a","doc","get","userSnapshot","exists","data","set","messages","nfts","display","background","borderRadius","py","px","color","fontSize","parseFloat","formatEther","toFixed","onClick","border","_hover","borderStyle","borderColor","backgroundColor","m","height","fontWeight","mr","length","_active","ThenticApiContext","THENTIC_BASE_URL","THENTIC_HEADERS","THENTIC_API_KEY","ThenticApiProvider","contract","setContract","getNFTContracts","url","axios","headers","response","console","log","liveContract","contracts","filter","x","status","result","error","initializeContract","post","mintNft","lvl","Date","valueOf","JSON","stringify","lvlData","LvlNftMint","mint","openInNewTab","transaction_url","window","open","className","src","lvl1","lvl2","lvl3","getImage","width","colorScheme","size","AccountModal","isOpen","onClose","deactivate","isLvl1","setIsLvl1","isLvl2","setIsLvl2","isLvl3","setIsLvl3","percent","setPercent","per","isCentered","pt","pb","mb","variant","textDecoration","mt","lineHeight","ml","alignContent","Copy","href","isExternal","ExternalLink","borderBottomLeftRadius","borderBottomRightRadius","p","textAlign","hasStripe","ChatMessage","message","text","messageClass","ChatRoom","dummy","messagesRef","query","orderBy","limit","useCollectionData","formValue","setFormValue","sendMessage","e","preventDefault","add","createdAt","FieldValue","serverTimestamp","merge","scrollIntoView","behavior","map","msg","id","onSubmit","onChange","target","placeholder","type","disabled","InitTransaction","scrolling","App","useDisclosure","onOpen","iframeData","theme","iframe","ReactDOM","render","StrictMode","DAppProvider","config","readOnlyChainId","readOnlyUrls","97","multicallAddresses","supportedChains","document","getElementById"],"mappings":"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","file":"static/js/main.4e626453.chunk.js","sourcesContent":["import { extendTheme } from \"@chakra-ui/react\";\r\n\r\nexport default extendTheme({\r\n  fonts: {\r\n    heading: \"Inter\",\r\n    body: \"Inter\",\r\n  },\r\n});\r\n","import { ReactNode } from \"react\";\r\nimport { Flex } from \"@chakra-ui/react\";\r\n\r\ntype Props = {\r\n  children?: ReactNode;\r\n};\r\n\r\nexport default function Layout({ children }: Props) {\r\n  return (\r\n    <Flex\r\n      flexDirection=\"column\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      h=\"100vh\"\r\n      bg=\"gray.800\"\r\n    >\r\n      {children}\r\n    </Flex>\r\n  );\r\n}\r\n","import { useEffect, useRef } from \"react\";\r\nimport { useEthers } from \"@usedapp/core\";\r\nimport Jazzicon from \"@metamask/jazzicon\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst StyledIdenticon = styled.div`\r\n  height: 2rem;\r\n  width: 2rem;\r\n  border-radius: 1.125rem;\r\n  background-color: black;\r\n`;\r\n\r\nexport default function Identicon(props:any) {\r\n  const ref = useRef<HTMLDivElement>();\r\n\r\n  useEffect(() => {\r\n    if (props.account && ref.current) {\r\n      ref.current.innerHTML = \"\";\r\n      ref.current.appendChild(Jazzicon(32, parseInt(props.account.slice(2, 10), 16)));\r\n    }\r\n  }, [props.account]);\r\n\r\n  return <StyledIdenticon ref={ref as any} />;\r\n}\r\n","import React, { createContext, useState } from 'react'\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/analytics';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyC9PENEfw55brZ7uEz-3idWI8a8eQPQuag\",\n  authDomain: \"thenticchat.firebaseapp.com\",\n  projectId: \"thenticchat\",\n  storageBucket: \"thenticchat.appspot.com\",\n  messagingSenderId: \"141030462850\",\n  appId: \"1:141030462850:web:06cef6c511f658dc4b6b9b\"\n})\n\nexport const FirebaseContext = createContext()\n\nexport default function FirebaseProvider({children}) {\n\n  const [user, setUser] = useState(null)\n  \n  const auth = firebase.auth();\n  const firestore = firebase.firestore();\n  const analytics = firebase.analytics();\n\n\n\n\n  return (\n    <FirebaseContext.Provider value={{firebase:firebase, auth:auth, firestore:firestore, user:user, setUser:setUser}}>\n      {children}\n    </FirebaseContext.Provider>\n  )\n}\n","import { Button, Box, Text } from \"@chakra-ui/react\";\r\nimport { useEthers, useEtherBalance } from \"@usedapp/core\";\r\nimport { formatEther } from \"@ethersproject/units\";\r\nimport Identicon from \"./Identicon\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { FirebaseContext } from \"../context/FirebaseProvider\";\r\n\r\ntype Props = {\r\n  handleOpenModal: any;\r\n};\r\n\r\nexport default function ConnectButton({ handleOpenModal }: Props) {\r\n  const {firestore, setUser} = useContext(FirebaseContext)\r\n  const { activateBrowserWallet, account } = useEthers();\r\n  const etherBalance = useEtherBalance(account);\r\n\r\n  const usersRef = firestore.collection('users');\r\n\r\n  useEffect(() => {\r\n    ;(async()=>{\r\n      if(account){\r\n        const userSnapshot = await usersRef.doc(account).get()\r\n        if(userSnapshot.exists){\r\n          setUser(userSnapshot.data())\r\n        }else{\r\n          usersRef.doc(account).set({\r\n            account: account,\r\n            messages: 0,\r\n            nfts: []\r\n          })\r\n          setUser({\r\n            account: account,\r\n            messages: 0,\r\n            nfts: []\r\n          })\r\n        }\r\n      }\r\n    })()\r\n  }, [account])\r\n  \r\n\r\n  function handleConnectWallet() {\r\n    activateBrowserWallet();\r\n  }\r\n\r\n\r\n\r\n  return account ? (\r\n    <Box\r\n      display=\"flex\"\r\n      alignItems=\"center\"\r\n      background=\"gray.700\"\r\n      borderRadius=\"xl\"\r\n      py=\"0\"\r\n    >\r\n      <Box px=\"3\">\r\n        <Text color=\"white\" fontSize=\"md\">\r\n          {etherBalance && parseFloat(formatEther(etherBalance)).toFixed(3)} BNB\r\n        </Text>\r\n      </Box>\r\n      <Button\r\n        onClick={handleOpenModal}\r\n        bg=\"gray.800\"\r\n        border=\"1px solid transparent\"\r\n        _hover={{\r\n          border: \"1px\",\r\n          borderStyle: \"solid\",\r\n          borderColor: \"blue.400\",\r\n          backgroundColor: \"gray.700\",\r\n        }}\r\n        borderRadius=\"xl\"\r\n        m=\"1px\"\r\n        px={3}\r\n        height=\"38px\"\r\n      >\r\n        <Text color=\"white\" fontSize=\"md\" fontWeight=\"medium\" mr=\"2\">\r\n          {account &&\r\n            `${account.slice(0, 6)}...${account.slice(\r\n              account.length - 4,\r\n              account.length\r\n            )}`}\r\n        </Text>\r\n        <Identicon account={account}/>\r\n      </Button>\r\n    </Box>\r\n  ) : (\r\n    <Button\r\n      onClick={handleConnectWallet}\r\n      bg=\"blue.800\"\r\n      color=\"blue.300\"\r\n      fontSize=\"lg\"\r\n      fontWeight=\"medium\"\r\n      borderRadius=\"xl\"\r\n      border=\"1px solid transparent\"\r\n      _hover={{\r\n        borderColor: \"blue.700\",\r\n        color: \"blue.400\",\r\n      }}\r\n      _active={{\r\n        backgroundColor: \"blue.800\",\r\n        borderColor: \"blue.700\",\r\n      }}\r\n    >\r\n      Connect to a wallet\r\n    </Button>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/lvl1.0dafa33d.png\";","export default __webpack_public_path__ + \"static/media/lvl2.c02bf475.png\";","export default __webpack_public_path__ + \"static/media/lvl3.cb475541.png\";","import axios from 'axios'\nimport React, { createContext, useEffect, useState } from 'react'\nimport lvlData from \"../lvlchats.json\"\n\n\nexport const ThenticApiContext = createContext();\n\nconst THENTIC_BASE_URL = \"https://thentic.tech/api/\"\nconst THENTIC_HEADERS = {'Content-Type': 'application/json'}\nconst THENTIC_API_KEY = \"xRa3TCvKpVeIlZCAV7Q01fSIPvnCg8r5\"\n\n\n\n\n\nexport default function ThenticApiProvider(props) {\n\n  const [contract, setContract] = useState(null)\n\nuseEffect(() => {\n  ;(async()=>{\n    await getNFTContracts()\n  })()\n}, [])\n\n\nconst getNFTContracts = async () => { \n  const url = `${THENTIC_BASE_URL}contracts?key=${THENTIC_API_KEY}&chain_id=${97}`\n  try{\n    const response = await axios.get(url,{headers: THENTIC_HEADERS})\n    console.log(response.data)\n    const liveContract = response.data.contracts.filter(x => x.status === \"success\")\n    console.log(liveContract[0])\n    setContract(liveContract[0])\n     }catch(err){\n         return {result: null, error: err} \n     }\n }\n\n\n\nconst initializeContract = async () => { \n        console.log(\"init contract\")\nif(!contract){\n  const url = THENTIC_BASE_URL + \"contract\"\n  const data = {'key': THENTIC_API_KEY,\n      'chain_id': 97,\n      'name': 'ThenticChatNfts', \n      'short_name': 'TCHAT',\n      // 'redirect_url': new URL(\"http://localhost:3001/\")\n  }\n  try{\n    const response = await axios.post(url,data,{headers: THENTIC_HEADERS})\n    return {result: response.data, error: null} \n}catch(err){\n    return {result: null, error: err} \n}\n}else{\n  return {result: contract, error: null} \n}\n  \n}\n\nconst mintNft = async (lvl, account) => { \n  console.log(contract)\n  if(contract){\n    const url = THENTIC_BASE_URL + \"nfts/mint\"\n    const data = {'key': THENTIC_API_KEY,\n        'chain_id': 97,\n        'contract': contract.contract, \n        'nft_id': new Date().valueOf(),\n        'nft_data': JSON.stringify(lvlData[`lvl${lvl}`]),\n        'to': account,\n        // 'redirect_url': new URL(\"http://localhost:3001/\")\n    }\n    console.log(data)\n    try{\n      const response = await axios.post(url,data,{headers: THENTIC_HEADERS})\n      return {result: response.data, error: null} \n  }catch(err){\n      return {result: null, error: err} \n  }\n  }else{\n    return {result: null, error: \"No contract found\"} \n  }\n}\n\n\n\n  return (\n    <ThenticApiContext.Provider value={{\n        initializeContract:initializeContract,\n        mintNft:mintNft\n    }}>\n        {props.children}\n    </ThenticApiContext.Provider>\n  )\n}\n","import { Button } from '@chakra-ui/react'\nimport { useEthers } from '@usedapp/core'\nimport React, { useContext, useEffect } from 'react'\nimport lvl1 from \"../assets/lvl1.png\"\nimport lvl2 from \"../assets/lvl2.png\"\nimport lvl3 from \"../assets/lvl3.png\"\nimport { ThenticApiContext } from '../context/ThenticApiProvider'\n\ninterface Props{\n    lvl: number\n}\n\nexport default function LvlNftMint({lvl}: Props) {\n    const {account} = useEthers()\n    const {mintNft} = useContext(ThenticApiContext)\n\nconst mint = async () => { \n   const data = await mintNft(lvl, account)\n   console.log(data)\n   if(data.result){\n    console.log(data.result)\n    openInNewTab(data.result.transaction_url)\n   }\n }\n\n\n const openInNewTab = (url:string) => {\n    window.open(url, '_blank', 'noopener,noreferrer');\n  };\n\n const getImage = () => { \n    switch (lvl) {\n        case 1:\n            return lvl1\n        case 2:\n            return lvl2\n        case 3:\n            return lvl3\n        default:\n            return ''\n    }\n  }\n \n\n  return (\n    <div className='lvl-mint'>\n        <img src={getImage()} width={20} height={20}/>\n        <Button onClick={mint} colorScheme='teal' size='xs'>Mint</Button>\n    </div>\n  )\n}\n","import {\r\n  Box,\r\n  Button,\r\n  Flex,\r\n  Link,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Text,\r\n  Progress,\r\n} from \"@chakra-ui/react\";\r\nimport { ExternalLinkIcon, CopyIcon } from \"@chakra-ui/icons\";\r\nimport { useEthers } from \"@usedapp/core\";\r\nimport Identicon from \"./Identicon\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { FirebaseContext } from \"../context/FirebaseProvider\";\r\nimport LvlNftMint from \"./LvlNftMint\";\r\n\r\ntype Props = {\r\n  isOpen: any;\r\n  onClose: any;\r\n};\r\n\r\nconst lvl1 = 5\r\nconst lvl2 = 15\r\nconst lvl3 = 30\r\n\r\nexport default function AccountModal({ isOpen, onClose }: Props) {\r\n  const { account, deactivate } = useEthers();\r\n  const [isLvl1, setIsLvl1] = useState(false)\r\n  const [isLvl2, setIsLvl2] = useState(false)\r\n  const [isLvl3, setIsLvl3] = useState(false)\r\n  const {user} = useContext(FirebaseContext)\r\n  const [percent, setPercent] = useState(0)\r\n  function handleDeactivateAccount() {\r\n    deactivate();\r\n    onClose();\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    let per = 0\r\n    if(user){\r\n      if(user.messages < lvl1){\r\n        per = parseInt(((user.messages/lvl1)*100).toFixed(0))\r\n      }else  if(user.messages >= lvl1 && user.messages < lvl2){\r\n        per = parseInt(((user.messages/lvl2)*100).toFixed(0))\r\n        setIsLvl1(true)\r\n      }else if(user.messages >= lvl2 && user.messages < lvl3){\r\n        per = parseInt(((user.messages/lvl3)*100).toFixed(0))\r\n        setIsLvl2(true)\r\n      }else{\r\n        setIsLvl3(true)\r\n      }\r\n      setPercent(per)\r\n    }\r\n  }, [user])\r\n  \r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose} isCentered size=\"md\">\r\n      <ModalOverlay />\r\n      <ModalContent\r\n        background=\"gray.900\"\r\n        border=\"1px\"\r\n        borderStyle=\"solid\"\r\n        borderColor=\"gray.700\"\r\n        borderRadius=\"3xl\"\r\n      >\r\n        <ModalHeader color=\"white\" px={4} fontSize=\"lg\" fontWeight=\"medium\">\r\n          Account\r\n        </ModalHeader>\r\n        <ModalCloseButton\r\n          color=\"white\"\r\n          fontSize=\"sm\"\r\n          _hover={{\r\n            color: \"whiteAlpha.700\",\r\n          }}\r\n        />\r\n        <ModalBody pt={0} px={4}>\r\n          <Box\r\n            borderRadius=\"3xl\"\r\n            border=\"1px\"\r\n            borderStyle=\"solid\"\r\n            borderColor=\"gray.600\"\r\n            px={5}\r\n            pt={4}\r\n            pb={2}\r\n            mb={3}\r\n          >\r\n            <Flex justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\r\n              <Text color=\"gray.400\" fontSize=\"sm\">\r\n                Connected with MetaMask\r\n              </Text>\r\n              <Button\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n                borderColor=\"blue.800\"\r\n                borderRadius=\"3xl\"\r\n                color=\"blue.500\"\r\n                fontSize=\"13px\"\r\n                fontWeight=\"normal\"\r\n                px={2}\r\n                height=\"26px\"\r\n                _hover={{\r\n                  background: \"none\",\r\n                  borderColor: \"blue.300\",\r\n                  textDecoration: \"underline\",\r\n                }}\r\n                onClick={handleDeactivateAccount}\r\n              >\r\n                Change\r\n              </Button>\r\n            </Flex>\r\n            <Flex alignItems=\"center\" mt={2} mb={4} lineHeight={1}>\r\n              <Identicon account={account}/>\r\n              <Text\r\n                color=\"white\"\r\n                fontSize=\"xl\"\r\n                fontWeight=\"semibold\"\r\n                ml=\"2\"\r\n                lineHeight=\"1.1\"\r\n              >\r\n                {account &&\r\n                  `${account.slice(0, 6)}...${account.slice(\r\n                    account.length - 4,\r\n                    account.length\r\n                  )}`}\r\n              </Text>\r\n            </Flex>\r\n            <Flex alignContent=\"center\" m={3}>\r\n              <Button\r\n                variant=\"link\"\r\n                color=\"gray.400\"\r\n                fontWeight=\"normal\"\r\n                fontSize=\"sm\"\r\n                _hover={{\r\n                  textDecoration: \"none\",\r\n                  color: \"whiteAlpha.800\",\r\n                }}\r\n              >\r\n                <CopyIcon mr={1} />\r\n                Copy Address\r\n              </Button>\r\n              <Link\r\n                fontSize=\"sm\"\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                href={`https://ropsten.etherscan.io/address/${account}`}\r\n                isExternal\r\n                color=\"gray.400\"\r\n                ml={6}\r\n                _hover={{\r\n                  color: \"whiteAlpha.800\",\r\n                  textDecoration: \"underline\",\r\n                }}\r\n              >\r\n                <ExternalLinkIcon mr={1} />\r\n                View on Explorer\r\n              </Link>\r\n              \r\n              \r\n            </Flex>\r\n          </Box>\r\n        </ModalBody>\r\n\r\n        <ModalFooter\r\n          justifyContent=\"center\"\r\n          background=\"gray.700\"\r\n          borderBottomLeftRadius=\"3xl\"\r\n          borderBottomRightRadius=\"3xl\"\r\n          p={6}\r\n        >\r\n          <Text\r\n            color=\"white\"\r\n            textAlign=\"left\"\r\n            fontWeight=\"medium\"\r\n            fontSize=\"md\"\r\n          >\r\n            Total number of messages sent: {user?.messages}\r\n            <Progress hasStripe value={percent} />\r\n                <div className=\"lvl-mint-div\">\r\n                  {isLvl1 && <LvlNftMint lvl={1}/>}\r\n                  {isLvl2 && <LvlNftMint lvl={2}/>}\r\n                  {isLvl3 && <LvlNftMint lvl={3}/>}\r\n                </div>\r\n          </Text>\r\n          \r\n        </ModalFooter>\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n}\r\n","import { useEthers } from '@usedapp/core';\nimport React from 'react'\nimport Identicon from './Identicon';\n\nexport default function ChatMessage(props:any) {\n    const { account } = useEthers();\n    const { text, account:uid } = props.message;\n\n    const messageClass = uid === account ? 'sent' : 'received';\n  \n    return (<>\n      <div className={`message ${messageClass}`}>\n        <Identicon account={account}/>\n        <p>{text}</p>\n      </div>\n    </>)\n}\n","import React, { useContext, useRef, useState } from 'react';\n\n\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport { useEthers } from '@usedapp/core';\nimport ChatMessage from './ChatMessage';\nimport { FirebaseContext } from '../context/FirebaseProvider';\n\n\n\nexport default function ChatRoom() {\n    const { account } = useEthers();\n    const {firebase,firestore, user, setUser} = useContext(FirebaseContext)\n    const dummy = useRef() as React.MutableRefObject<HTMLInputElement>;\n    const messagesRef = firestore.collection('messages');\n    const usersRef = firestore.collection('users');\n    const query = messagesRef.orderBy('createdAt').limit(25);\n\n    //ignore ts\n    /*eslint-disable */\n    const [messages] = useCollectionData(query); // eslint-disable-line\n  /*eslint-enable */\n    const [formValue, setFormValue] = useState('');\n  \n  \n    const sendMessage = async (e:any) => {\n      e.preventDefault();\n\n  \n      await messagesRef.add({\n        text: formValue,\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n        account\n      })\n\n      user.messages += 1\n      setUser({...user})\n      usersRef.doc(account).set(user, {merge:true})\n  \n      setFormValue('');\n      dummy.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  \n    return (<>\n      <main>\n  \n        {messages && messages.map((msg:any) => <ChatMessage key={msg.id} message={msg} />)}\n  \n        <span ref={dummy}></span>\n  \n      </main>\n  \n      <form onSubmit={sendMessage}>\n  \n        <input value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\"say something nice\" />\n  \n        <button type=\"submit\" disabled={!formValue}>💬</button>\n  \n      </form>\n    </>)\n}\n","import React from 'react'\n\nexport default function InitTransaction(props:any) {\n\n  return (\n  <iframe src='https://thentic.tech/request?id=gvkVyT2EHED6qgON' width={1} height={1} scrolling={\"no\"}>\n  </iframe>\n  )\n}\n","import { Button, ChakraProvider, useDisclosure } from \"@chakra-ui/react\";\nimport theme from \"./theme\";\nimport Layout from \"./components/Layout\";\nimport ConnectButton from \"./components/ConnectButton\";\nimport AccountModal from \"./components/AccountModal\";\nimport \"@fontsource/inter\";\nimport { useEthers } from \"@usedapp/core\";\nimport ChatRoom from \"./components/ChatRoom\";\nimport './App.css';\nimport { useContext, useState } from \"react\";\nimport { ThenticApiContext } from \"./context/ThenticApiProvider\";\nimport InitTransaction from \"./components/InitTransaction\";\nimport axios from \"axios\";\nimport LinkWrapper from \"./components/LinkWrapper\";\n\nfunction App() {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const { account } = useEthers();\n  const {initializeContract} = useContext(ThenticApiContext)\n  const [iframeData, setiframeData] = useState(null)\n\n\n  const initContract = async () => { \n    console.log(\"init\")\n     const data = await initializeContract()\n     if(data.result){\n      console.log(data.result)\n      openInNewTab(data.result.transaction_url)\n      setiframeData(data.result.transaction_pixel)\n     }\n  }\n\n  const openInNewTab = (url:string) => {\n    window.open(url, '_blank', 'noopener,noreferrer');\n  };\n\n  return (\n    <ChakraProvider theme={theme}>\n      <Layout>\n        <div className=\"App\">\n          {console.log(iframeData)}\n          <InitTransaction iframe={iframeData}/>\n      <header>\n        <h1>Thentic Chat! ⚛️🔥</h1>\n        {/* <Button onClick={initContract} colorScheme='blue'>Button</Button> */}\n        {/* <LinkWrapper link={\"https://thentic.tech/request?id=3CvuNqZx2enDxzix\"}/> */}\n        <ConnectButton handleOpenModal={onOpen} />\n        <AccountModal isOpen={isOpen} onClose={onClose} /> \n      </header>\n\n      <section>\n         <ChatRoom />\n      </section>\n\n    </div>\n      </Layout>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Config, DAppProvider } from \"@usedapp/core\";\nimport FirebaseProvider from \"./context/FirebaseProvider\";\nimport ThenticApiProvider from \"./context/ThenticApiProvider\";\n\nconst config: Config = {\n  readOnlyChainId: 97,\n  readOnlyUrls: {\n    97: \"https://data-seed-prebsc-1-s1.binance.org:8545/\",\n  },\n  multicallAddresses: {\n    97: \"0xae11C5B5f29A6a25e955F0CB8ddCc416f522AF5C\",\n  },\n  supportedChains: [97],\n}\n    \n\nReactDOM.render(\n  <React.StrictMode>\n    <DAppProvider config={config}>\n      <FirebaseProvider>\n        <ThenticApiProvider>\n      <App />\n      </ThenticApiProvider>\n      </FirebaseProvider>\n    </DAppProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}